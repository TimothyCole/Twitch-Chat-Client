{"dependencies":[{"name":"vue","loc":{"line":197,"column":25}},{"name":"vueify/lib/insert-css","loc":{"line":1,"column":39}},{"name":"vue-hot-reload-api","loc":{"line":196,"column":54}},{"name":"babel-runtime/core-js/object/keys","loc":{"line":9,"column":20}},{"name":"babel-runtime/regenerator","loc":{"line":13,"column":27}},{"name":"babel-runtime/helpers/asyncToGenerator","loc":{"line":17,"column":33}},{"name":"babel-runtime/core-js/json/stringify","loc":{"line":21,"column":25}}],"generated":{"js":"\"use strict\";\n\nvar __vueify_style_dispose__ = require(\"vueify/lib/insert-css\").insert(\"/* line 141, stdin */\\ndiv#chat {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  width: 100%;\\n  max-height: 100%;\\n  max-width: 100%;\\n  overflow: hidden;\\n  box-sizing: border-box;\\n  border: 1px solid transparent; }\\n  /* line 152, stdin */\\n  div#chat .buffer {\\n    flex: 3 0px;\\n    order: 1;\\n    overflow-y: auto;\\n    display: block; }\\n    /* line 158, stdin */\\n    div#chat .buffer .message {\\n      padding: 5px 10px;\\n      word-wrap: break-word; }\\n      /* line 162, stdin */\\n      div#chat .buffer .message * {\\n        vertical-align: middle; }\\n      /* line 165, stdin */\\n      div#chat .buffer .message img {\\n        height: 1.75rem; }\\n      /* line 167, stdin */\\n      div#chat .buffer .message .badges {\\n        display: inline-block; }\\n        /* line 170, stdin */\\n        div#chat .buffer .message .badges .tooltip {\\n          position: relative;\\n          display: inline-block; }\\n          /* line 174, stdin */\\n          div#chat .buffer .message .badges .tooltip .tooltip-data {\\n            visibility: hidden;\\n            width: auto;\\n            white-space: nowrap;\\n            color: #fff;\\n            text-align: center;\\n            border-radius: 2px;\\n            padding: 5px 10px;\\n            position: absolute;\\n            z-index: 1;\\n            margin-top: -3px; }\\n          /* line 187, stdin */\\n          div#chat .buffer .message .badges .tooltip:hover .tooltip-data {\\n            visibility: visible; }\\n        /* line 192, stdin */\\n        div#chat .buffer .message .badges img {\\n          height: 1.25rem;\\n          padding: 2px;\\n          position: relative; }\\n      /* line 199, stdin */\\n      div#chat .buffer .message .name:after {\\n        content: \\\":\\\"; }\\n  /* line 207, stdin */\\n  div#chat .footer {\\n    order: 2;\\n    position: relative;\\n    display: block;\\n    border-top: 1px solid transparent; }\\n    /* line 213, stdin */\\n    div#chat .footer input {\\n      width: 100%;\\n      height: 100%;\\n      border: none;\\n      max-height: 100%;\\n      padding: 0 10px;\\n      margin: 0; }\\n    /* line 222, stdin */\\n    div#chat .footer svg {\\n      position: absolute;\\n      top: 5px;\\n      right: 5px; }\");(function () {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _keys = require(\"babel-runtime/core-js/object/keys\");\n\n  var _keys2 = _interopRequireDefault(_keys);\n\n  var _regenerator = require(\"babel-runtime/regenerator\");\n\n  var _regenerator2 = _interopRequireDefault(_regenerator);\n\n  var _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\n  var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\n  var _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\n  var _stringify2 = _interopRequireDefault(_stringify);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n  }\n\n  exports.default = {\n    name: 'Chat',\n    data: function data() {\n      return {\n        defaults: {\n          background: \"#000\",\n          \"border-color\": \"#333\",\n          color: \"#fff\",\n          \"font-family\": \"fira code\",\n          \"font-size\": \"14px\",\n          nick: \"#ffffff\",\n          tooltip: \"#333333\"\n        },\n        badges: {},\n        settings: localStorage.getItem(\"styleSettings\"),\n        inputHeight: localStorage.getItem(\"inputHeight\") || \"50px\",\n        messages: []\n      };\n    },\n\n    computed: {\n      Channels: function Channels() {\n        return this.$store.state.Channels;\n      },\n      Active: function Active() {\n        return this.$store.state.Active;\n      },\n      channel: function channel() {\n        return this.Channels[this.Active];\n      }\n    },\n    created: function created() {\n      var _this = this;\n\n      if (this.$parent.server.readyState() === \"OPEN\") {\n        this.join();\n        this.monitor();\n        this.badges = JSON.parse((0, _stringify2.default)(this.$parent.badges));\n      } else {\n        this.$parent.server.on(\"connected\", function (address, port) {\n          _this.join();\n          _this.monitor();\n          _this.badges = JSON.parse((0, _stringify2.default)(_this.$parent.badges));\n        });\n      }\n    },\n    updated: function updated() {\n      var container = this.$el.querySelector(\".buffer\");\n      container.scrollTop = container.scrollHeight;\n    },\n\n    methods: {\n      join: function () {\n        var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {\n          var badges;\n          return _regenerator2.default.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return fetch(\"https://badges.twitch.tv/v1/badges/channels/\" + this.channel.id + \"/display?language=en\").then(function (d) {\n                    return d.json();\n                  });\n\n                case 3:\n                  badges = _context.sent;\n\n                  this.badges = JSON.parse((0, _stringify2.default)(this.$parent.badges));\n                  if (badges.badge_sets.subscriber) this.badges.badge_sets.subscriber = badges.badge_sets.subscriber;\n                  _context.next = 11;\n                  break;\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](0);\n                  console.error(_context.t0);\n\n                case 11:\n\n                  this.messages.push({\n                    server: true,\n                    message: \"Welcome to the chat room!\"\n                  });\n\n                  if (!(this.$parent.server.getChannels().indexOf(\"#\" + this.name) !== -1)) {\n                    _context.next = 14;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 14:\n                  this.$parent.server.join(\"#\" + this.channel.name).then(function (data) {}).catch(function (err) {});\n\n                case 15:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this, [[0, 8]]);\n        }));\n\n        function join() {\n          return _ref.apply(this, arguments);\n        }\n\n        return join;\n      }(),\n      monitor: function monitor() {\n        var _this2 = this;\n\n        this.$parent.server.on(\"message\", function (channel, userstate, message, self) {\n          if (_this2.badges.badge_sets.length <= 1 || channel !== \"#\" + _this2.channel.name) return;\n\n          if (_this2.$parent.socialblade.indexOf(userstate.username) !== -1) {\n            userstate.badges.socialblade = \"1\";\n          }\n\n          var msg = {\n            id: _this2.messages.length + 1,\n            time: new Date().getTime(),\n            userstate: userstate,\n            message: message\n          };\n          _this2.messages.push(msg);\n        });\n      },\n      timeFormat: function timeFormat(time) {\n        return new Date(time).toTimeString().slice(0, 8);\n      },\n      messageFormat: function messageFormat(text, emotes) {\n        var text = text.split('');\n\n        if (emotes) {\n          (0, _keys2.default)(emotes).forEach(function (prop) {\n            var values = emotes[prop];\n\n            for (var v in values) {\n              var splices = values[v].split(\"-\");\n              splices[1]++;\n\n              var length = splices[1] - splices[0];\n              var empty = Array.apply(null, new Array(length + 1)).map(function () {\n                return '';\n              });\n              text = text.slice(0, splices[0]).concat(empty).concat(text.slice(splices[1] + 1, text.length));\n              text.splice(splices[0], 1, '<img src=\"http://static-cdn.jtvnw.net/emoticons/v1/' + prop + '/3.0\">');\n            }\n          });\n        }\n\n        for (var h in text) {\n          if (text[h].length !== 1) continue;\n          text[h] = text[h].replace(/[&<>\"']/g, function (m) {\n            return { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;' }[m];\n          });\n        }\n\n        return text.join('');\n      }\n    }\n  };\n})();\nif (module.exports.__esModule) module.exports = module.exports.default;\nvar __vue__options__ = typeof module.exports === \"function\" ? module.exports.options : module.exports;\nif (__vue__options__.functional) {\n  console.error(\"[vueify] functional components are not supported and should be defined in plain js files using render functions.\");\n}\n__vue__options__.render = function render() {\n  var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { style: [_vm.defaults, _vm.settings], attrs: { \"id\": \"chat\" } }, [_c('div', { staticClass: \"buffer\" }, _vm._l(_vm.messages, function (msg) {\n    return _c('div', { key: msg.id, staticClass: \"message\" }, [!msg.server ? _c('div', [_c('span', { staticClass: \"time\" }, [_vm._v(_vm._s(_vm.timeFormat(msg.time)))]), _vm._v(\" \"), _c('div', { staticClass: \"badges\" }, _vm._l(msg.userstate.badges, function (version, badge) {\n      return _c('span', { key: badge, staticClass: \"badge tooltip\" }, [_c('img', { attrs: { \"src\": _vm.badges.badge_sets[badge].versions[version].image_url_4x } }), _vm._v(\" \"), _c('span', { staticClass: \"tooltip-data\", style: { backgroundColor: _vm.defaults.tooltip }, domProps: { \"textContent\": _vm._s(_vm.badges.badge_sets[badge].versions[version].title) } })]);\n    })), _vm._v(\" \"), _c('span', { staticClass: \"name\", style: { color: msg.userstate.color || _vm.defaults.nick } }, [_vm._v(_vm._s(msg.userstate['display-name'] || msg.userstate.username))]), _vm._v(\" \"), _c('span', { staticClass: \"msg\", domProps: { \"innerHTML\": _vm._s(_vm.messageFormat(msg.message, msg.userstate.emotes)) } })]) : _vm._e(), _vm._v(\" \"), msg.server ? _c('div', [_c('span', { staticClass: \"server\", domProps: { \"innerHTML\": _vm._s(msg.message) } })]) : _vm._e()]);\n  })), _vm._v(\" \"), _c('div', { staticClass: \"footer\", style: [_vm.defaults, _vm.settings, { height: _vm.inputHeight }] }, [_c('input', { style: [_vm.defaults, _vm.settings], attrs: { \"type\": \"text\", \"placeholder\": 'Say something in #' + _vm.channel.name } }), _vm._v(\" \"), _c('Icon', { attrs: { \"name\": \"smile-o\", \"label\": \"Emotes\" } })], 1)]);\n};\n__vue__options__.staticRenderFns = [];\nif (module.hot) {\n  (function () {\n    var hotAPI = require(\"vue-hot-reload-api\");\n    hotAPI.install(require(\"vue\"), true);\n    if (!hotAPI.compatible) return;\n    module.hot.accept();\n    module.hot.dispose(__vueify_style_dispose__);\n    if (!module.hot.data) {\n      hotAPI.createRecord(\"data-v-59d0f614\", __vue__options__);\n    } else {\n      hotAPI.reload(\"data-v-59d0f614\", __vue__options__);\n    }\n  })();\n}"},"hash":"84bf54361b876accc1c30a1692260961"}