{"dependencies":[{"name":"request","loc":{"line":1,"column":22}},{"name":"./utils","loc":{"line":2,"column":16}}],"generated":{"js":"var request = require(\"request\");\r\nvar _ = require(\"./utils\");\r\n\r\nvar api = function api(options, callback) {\r\n    // Set the url to options.uri or options.url..\r\n    var url = _.get(options.url, null) === null ? _.get(options.uri, null) : _.get(options.url, null);\r\n\r\n    // Make sure it is a valid url..\r\n    if (!_.isURL(url)) { url = url.charAt(0) === \"/\" ? `https://api.twitch.tv/kraken${url}` : `https://api.twitch.tv/kraken/${url}`; }\r\n\r\n    // We are inside a Node application, so we can use the request module..\r\n    if (_.isNode()) {\r\n        request(_.merge(options, { url: url, method: \"GET\", json: true }), function (err, res, body) {\r\n            callback(err, res, body);\r\n        });\r\n    }\r\n    // Inside an extension -> we cannot use jsonp!\r\n    else if (_.isExtension()) {\r\n      options = _.merge(options, { url: url, method: \"GET\", headers: {} })\r\n      // prepare request\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(options.method, options.url, true);\r\n      for(var name in options.headers) {\r\n        xhr.setRequestHeader(name, options.headers[name]);\r\n      }\r\n      xhr.responseType = \"json\";\r\n      // set request handler\r\n      xhr.addEventListener(\"load\", (ev) => {\r\n        if(xhr.readyState == 4) {\r\n          if(xhr.status != 200) {\r\n            callback(xhr.status, null, null);\r\n          } else {\r\n            callback(null, null, xhr.response);\r\n          }\r\n        }\r\n      });\r\n      // submit\r\n      xhr.send();\r\n    }\r\n    // Inside a web application, use jsonp..\r\n    else {\r\n        // Callbacks must match the regex [a-zA-Z_$][\\w$]*(\\.[a-zA-Z_$][\\w$]*)*\r\n        var callbackName = `jsonp_callback_${Math.round(100000 * Math.random())}`;\r\n        window[callbackName] = function(data) {\r\n            delete window[callbackName];\r\n            document.body.removeChild(script);\r\n            callback(null, null, data);\r\n        };\r\n\r\n        // Inject the script in the document..\r\n        var script = document.createElement(\"script\");\r\n        script.src = `${url}${url.indexOf(\"?\") >= 0 ? \"&\" : \"?\"}callback=${callbackName}`;\r\n        document.body.appendChild(script);\r\n    }\r\n}\r\n\r\nmodule.exports = api;\r\n"},"hash":"d84f1720c833684ee1136f43c8981bb3"}